// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketStationMVC.Data;

#nullable disable

namespace TicketStationMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250123192135_data-ins")]
    partial class datains
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AddedToCart")
                        .HasColumnType("datetime2");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("EventId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2797),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2799),
                            Name = "Music Concert"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2802),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2803),
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2805),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2807),
                            Name = "Theater"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2808),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2810),
                            Name = "Art"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2812),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2815),
                            Name = "Festival"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2817),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2818),
                            Name = "Workshop"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2820),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2824),
                            Name = "Charity"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2825),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2827),
                            Name = "Food & Drinks"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2828),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2832),
                            Name = "Trade show"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2834),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2835),
                            Name = "Family & kids"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2837),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2839),
                            Name = "Gaming tournament"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2842),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2843),
                            Name = "Fashion show"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2845),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2846),
                            Name = "Bussines networking"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2848),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2849),
                            Name = "Health and wellness"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2851),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2853),
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2927),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 27, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2917),
                            Description = "A high-energy music festival featuring top rock bands from around the world. Enjoy live performances, food stalls, and exciting activities for all ages. Come for the music, stay for the unforgettable atmosphere!",
                            ImageURL = "/image/rock-music.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2928),
                            ModifiedById = 1,
                            Name = "Music Concert: \"Summer Rock Fest\"",
                            Price = 60m,
                            Quantity = 250,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2933),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 3, 14, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2931),
                            Description = "An elegant evening of dinner, live entertainment, and fundraising for a noble cause. Join us to make a difference in the lives of those in need.",
                            ImageURL = "/image/charity",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2934),
                            ModifiedById = 1,
                            Name = "Charity Gala: \"Hope for Tomorrow\"",
                            Price = 100m,
                            Quantity = 300,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2938),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 7, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2936),
                            Description = "Explore the great outdoors with an exhilarating mountain hike. Perfect for nature enthusiasts and adventure seekers.",
                            ImageURL = "/image/outdoor-adventure",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2940),
                            ModifiedById = 1,
                            Name = "Outdoor Adventure: \"Mountain Hike Experience\"",
                            Price = 20m,
                            Quantity = 150,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2944),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 3, 24, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2942),
                            Description = "Join industry leaders and tech enthusiasts to discuss the latest trends in technology and innovation.",
                            ImageURL = "/image/tech-conference.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2945),
                            ModifiedById = 1,
                            Name = "Tech Conference: \"Innovators Unite 2025\"",
                            Price = 75m,
                            Quantity = 200,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2949),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 17, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2947),
                            Description = "A culinary journey featuring dishes from around the world. Come hungry and explore a variety of international cuisines.",
                            ImageURL = "/image/food-festival.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2950),
                            ModifiedById = 1,
                            Name = "Food Festival: \"Taste the World\"",
                            Price = 40m,
                            Quantity = 500,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2954),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 2, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2952),
                            Description = "An evening of side-splitting comedy featuring top stand-up comedians. Prepare to laugh until it hurts!",
                            ImageURL = "/image/comedy-night.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2956),
                            ModifiedById = 1,
                            Name = "Comedy Night: \"Laugh Out Loud\"",
                            Price = 50m,
                            Quantity = 100,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2964),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 3, 4, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2958),
                            Description = "Discover stunning works of art by contemporary artists. A must-visit for art lovers and collectors.",
                            ImageURL = "/image/art-exhibition.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2966),
                            ModifiedById = 1,
                            Name = "Art Exhibition: \"Modern Visions\"",
                            Price = 25m,
                            Quantity = 200,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2971),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 4, 3, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2969),
                            Description = "Compete with the best gamers in a thrilling tournament. Cash prizes and bragging rights await the victors!",
                            ImageURL = "/image/gaming-tournament.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2973),
                            ModifiedById = 1,
                            Name = "Gaming Tournament: \"Battle Royale Championship\"",
                            Price = 30m,
                            Quantity = 300,
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2977),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 12, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2975),
                            Description = "Learn to dance like a pro in this fun and engaging salsa workshop. No experience needed!",
                            ImageURL = "/image/dancing.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2978),
                            ModifiedById = 1,
                            Name = "Dance Workshop: \"Salsa Night\"",
                            Price = 35m,
                            Quantity = 50,
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2982),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 5, 3, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2980),
                            Description = "A fun-filled day for the whole family at the adventure park. Activities for kids and adults alike.",
                            ImageURL = "/image/family.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2983),
                            ModifiedById = 1,
                            Name = "Family Fun Day: \"Adventure Park\"",
                            Price = 60m,
                            Quantity = 600,
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2988),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 4, 18, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2986),
                            Description = "Join bestselling authors for an intimate evening of book readings and discussions.",
                            ImageURL = "/image/book-reading.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2989),
                            ModifiedById = 1,
                            Name = "Book Reading: \"Authors' Evening\"",
                            Price = 15m,
                            Quantity = 80,
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2993),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 2, 22, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2991),
                            Description = "Connect with industry leaders and like-minded entrepreneurs at this exclusive networking event.",
                            ImageURL = "/image/bussines.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2994),
                            ModifiedById = 1,
                            Name = "Business Networking: \"Entrepreneur Meet 2025\"",
                            Price = 50m,
                            Quantity = 150,
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2998),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 3, 9, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2996),
                            Description = "Recharge your mind and body with a relaxing yoga retreat in a serene location.",
                            ImageURL = "yoga.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2999),
                            ModifiedById = 1,
                            Name = "Health & Wellness: \"Yoga Retreat\"",
                            Price = 100m,
                            Quantity = 40,
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3004),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 4, 28, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3002),
                            Description = "Experience the richness of culture and traditions at the annual heritage festival.",
                            ImageURL = "/image/cultural-event.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3005),
                            ModifiedById = 1,
                            Name = "Cultural Festival: \"Heritage Celebrations\"",
                            Price = 20m,
                            Quantity = 400,
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3010),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 5, 13, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3008),
                            Description = "Watch the premiere of a highly anticipated indie movie, followed by a Q&A with the director.",
                            ImageURL = "/image/film-screening.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3012),
                            ModifiedById = 1,
                            Name = "Film Screening: \"Indie Movie Premiere\"",
                            Price = 25m,
                            Quantity = 200,
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3017),
                            CreatedById = 1,
                            DateOfEvent = new DateTime(2025, 6, 2, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3015),
                            Description = "A glamorous evening featuring the latest collections from top fashion designers.",
                            ImageURL = "/image/fashion.jpg",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(3018),
                            ModifiedById = 1,
                            Name = "Fashion Show: \"Style Icons 2025\"",
                            Price = 75m,
                            Quantity = 150,
                            Status = true
                        });
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.EventCategories", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("EventId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("EventCategories");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            EventId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            EventId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            EventId = 2,
                            CategoryId = 10
                        },
                        new
                        {
                            EventId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            EventId = 3,
                            CategoryId = 4
                        },
                        new
                        {
                            EventId = 4,
                            CategoryId = 6
                        },
                        new
                        {
                            EventId = 4,
                            CategoryId = 13
                        },
                        new
                        {
                            EventId = 4,
                            CategoryId = 9
                        },
                        new
                        {
                            EventId = 5,
                            CategoryId = 10
                        },
                        new
                        {
                            EventId = 5,
                            CategoryId = 8
                        },
                        new
                        {
                            EventId = 6,
                            CategoryId = 11
                        },
                        new
                        {
                            EventId = 6,
                            CategoryId = 5
                        },
                        new
                        {
                            EventId = 7,
                            CategoryId = 14
                        },
                        new
                        {
                            EventId = 7,
                            CategoryId = 9
                        },
                        new
                        {
                            EventId = 8,
                            CategoryId = 12
                        },
                        new
                        {
                            EventId = 8,
                            CategoryId = 4
                        },
                        new
                        {
                            EventId = 9,
                            CategoryId = 15
                        },
                        new
                        {
                            EventId = 9,
                            CategoryId = 8
                        },
                        new
                        {
                            EventId = 10,
                            CategoryId = 4
                        },
                        new
                        {
                            EventId = 10,
                            CategoryId = 6
                        },
                        new
                        {
                            EventId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            EventId = 11,
                            CategoryId = 5
                        },
                        new
                        {
                            EventId = 12,
                            CategoryId = 7
                        },
                        new
                        {
                            EventId = 12,
                            CategoryId = 8
                        },
                        new
                        {
                            EventId = 13,
                            CategoryId = 13
                        },
                        new
                        {
                            EventId = 13,
                            CategoryId = 6
                        },
                        new
                        {
                            EventId = 14,
                            CategoryId = 10
                        },
                        new
                        {
                            EventId = 14,
                            CategoryId = 5
                        },
                        new
                        {
                            EventId = 15,
                            CategoryId = 8
                        },
                        new
                        {
                            EventId = 15,
                            CategoryId = 5
                        },
                        new
                        {
                            EventId = 16,
                            CategoryId = 2
                        },
                        new
                        {
                            EventId = 16,
                            CategoryId = 10
                        });
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 285, DateTimeKind.Local).AddTicks(2749),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 285, DateTimeKind.Local).AddTicks(2809),
                            Name = "adminuser"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 285, DateTimeKind.Local).AddTicks(2812),
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 285, DateTimeKind.Local).AddTicks(2813),
                            Name = "ordinaryuser"
                        });
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2156),
                            Email = "admin@admin.com",
                            ModifiedAt = new DateTime(2025, 1, 23, 21, 21, 35, 401, DateTimeKind.Local).AddTicks(2225),
                            Name = "Administrator",
                            Password = "$2a$11$/G.3Q2h5UcerJaZznNQgseuQu1wQM75say3LtexLg.EYwkI63B1/u",
                            RegisteredOn = new DateTime(2025, 1, 23, 21, 21, 35, 285, DateTimeKind.Local).AddTicks(2965),
                            RoleId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Cart", b =>
                {
                    b.HasOne("TicketStationMVC.Data.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.CartItem", b =>
                {
                    b.HasOne("TicketStationMVC.Data.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketStationMVC.Data.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Event", b =>
                {
                    b.HasOne("TicketStationMVC.Data.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.EventCategories", b =>
                {
                    b.HasOne("TicketStationMVC.Data.Entities.Category", "Category")
                        .WithMany("EventCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketStationMVC.Data.Entities.Event", "Event")
                        .WithMany("EventCategories")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.User", b =>
                {
                    b.HasOne("TicketStationMVC.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Category", b =>
                {
                    b.Navigation("EventCategories");
                });

            modelBuilder.Entity("TicketStationMVC.Data.Entities.Event", b =>
                {
                    b.Navigation("EventCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
